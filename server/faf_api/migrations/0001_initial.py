# Generated by Django 5.0.6 on 2024-10-15 20:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('year', models.BigIntegerField(unique=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('logo_url', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=100)),
                ('photo', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'validation',
            },
        ),
        migrations.CreateModel(
            name='TeamCategories',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.categories')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.teams')),
            ],
            options={
                'db_table': 'team_categories',
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('team_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.teamcategories')),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Crosses',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('local_team', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.teams')),
                ('visitor_team', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='crosses_visitor_team_set', to='faf_api.teams')),
            ],
            options={
                'db_table': 'crosses',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.teams')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.IntegerField()),
                ('cross', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.crosses')),
                ('local_team_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.teamcategories')),
                ('visitor_team_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='matches_visitor_team_category_set', to='faf_api.teamcategories')),
                ('local_validation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.validation')),
                ('visitor_validation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='matches_visitor_validation_set', to='faf_api.validation')),
            ],
            options={
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='ValidationPlayers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.players')),
                ('validation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='faf_api.validation')),
            ],
            options={
                'db_table': 'validation_players',
            },
        ),
    ]
